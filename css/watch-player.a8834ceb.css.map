{"version":3,"sources":["webpack:///./src/components/watch/player/PlayerControls.vue","webpack:///./src/components/watch/player/src/components/watch/player/MediaPlayer.vue","webpack:///./src/components/watch/settings/VideoSettings.vue"],"names":[],"mappings":";AAmLA;EACE;EACA;AAlLF;AAoLA;AACE;IACE;AAjLF;AAmLA;IACE;AAjLF;AACF,C;;ACsQA;;IAEA;AAEA;EACA;EACA;EACA;EACA;EACA;AACA;AAEA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;AACA;EAEA;AACA;AACA;EACA;EACA;EACA;AACA;;ACrHA;EACE;EAEA;EACA;EAEA;EACA;EACA;EAEA;EAkBA;EAKA;EACA;EACA;AA7MF,C","file":"css/watch-player.a8834ceb.css","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.rotate {\r\n  display: inline-block !important;\r\n  animation: rotation 10s infinite linear !important;\r\n}\r\n@keyframes rotation {\r\n  50% {\r\n    transform: rotate(720deg);\r\n  }\r\n  100% {\r\n    transform: rotate(-720deg);\r\n  }\r\n}\r\n","<template>\n  <q-card>\n    <q-card-section class=\"q-ma-none q-pa-none\">\n          <vue-plyr ref=\"mediaPlayer\">\n      <!-- Begin Audio Interface -->\n      <video\n        v-if=\"this.type == 'audio'\"\n        id=\"mediaPlayer\"\n        ref=\"mediaPlayer\"\n        :playsinline=\"playsinline\"\n        :controls=\"controls\"\n        :data-poster=\"poster\"\n      >\n        <source\n          v-for=\"source in sources\"\n          :key=\"source.src\"\n          :src=\"cdn_url + '/' + id\"\n          :type=\"source.type\"\n        />\n      </video>\n      <!-- End Audio Interface -->\n\n      <!-- Begin Video Interface -->\n      <video\n        v-else\n        id=\"mediaPlayer\"\n        ref=\"mediaPlayer\"\n        :playsinline=\"playsinline\"\n        :controls=\"controls\"\n        :data-poster=\"poster\"\n      >\n        <source\n          v-for=\"source in sources\"\n          :key=\"source.src\"\n          :src=\"source.src\"\n          :type=\"source.type\"\n          :size=\"source.size\"\n        />\n      </video>\n      <!-- End Video Interface -->\n      \n    </vue-plyr>\n    <!-- </pan-zoom> -->\n    <!-- <button is=\"google-cast-button\" id=\"cast\">Cast</button> -->\n   \n    <!-- <pan-zoom> -->\n    </q-card-section>\n\n  </q-card>\n</template>\n\n<script>\nimport { utilities } from \"../../../mixins/utilities\";\nimport { mapState, mapActions} from \"vuex\";\n// Vue.use(panZoom);\nexport default {\n  name: \"PlyerMediaPlayer\",\n  inheritAttrs: false,\n  mixins: [utilities],\n  props: {\n    flipped: Boolean,\n    controls: Boolean,\n    poster: String,\n    sources: Array,\n    allowfullscreen: Boolean,\n    color: String,\n    title: String,\n    id: String,\n    to: String,\n    type: String,\n    playsinline: Boolean,\n    \"webkit-playsinline\": Boolean,\n    preload: [String, Boolean],\n    cdn_url: String\n  },\n  data: () => ({\n    ctime: 0,\n    pzOptions: {\n      minZoom: 1,\n      maxZoom: 4,\n      bounds: true,\n      boundsPadding: 0.1\n    },\n    zoom: null,\n  }),\n  created() {\n    this.$root.$on(\"slider-change\", this.seekTo);\n    this.$root.$on(\"togglePlay\", this.togglePlay);\n    this.$root.$on(\"restart\", this.restart);\n    this.$root.$on(\"seek5\", this.seekTo);\n    this.$root.$on(\"seek-5\", this.seekTo);\n    this.$root.$on(\"loopStart\", this.setloopStart);\n    this.$root.$on(\"loopStop\", this.setloopStop);\n    // this.$root.$on(\"toggleLooping\", this.toggleLooping);\n    this.$root.$on(\"speed\", this.speedChange);\n    this.$root.$on(\"volume\", this.volumeChange);\n    this.$root.$on(\"zoom\", this.toggleZoom);\n    this.$root.$on(\"resetZoom\", this.resetZoom);\n    this.$root.$on(\"clear-loop\", this.clearLoop);\n    this.unsubscribe = this.$store.subscribe((mutation, state) => {\n      if (mutation.type === \"watch/SET_SEEK_TIME\") {\n        this.seekTo(state.watch.seekToTime);\n        this.player?.play();\n      }\n    });\n  },\n  beforeDestroy() {\n    this.unsubscribe();\n  },\n  mounted() {\n    this.player.on(\"ready\", e => {\n      this.loadDefaultSettings();\n      this.player.toggleControls(false);\n    });\n    this.player.on(\"timeupdate\", this.timeUpdated);\n    this.player.on(\"clear-loop\", this.clearLoop);\n    this.player.on(\"playing play pause\", this.stateChange);\n  },\n  watch: {\n    looping() {\n      console.log(\"looptoggle\");\n      if (this.$store.getters[\"watch/isValidLoop\"])\n        this.setCurrentTime(this.start);\n        console.log(`toggling looping: ${this.looping ? 'on' : 'off'}`)\n      this.player.togglePlay(this.looping);\n      this.showMessage({\n        type: \"info\",\n        caption: this.looping\n          ? `Start: ${this.secondsToMinutes(\n              this.start\n            )} -> End: ${this.secondsToMinutes(this.stop)}`\n          : this.secondsToMinutes(this.player.currentTime),\n        message: this.looping ? \"Loop Active\" : \"Loop Stopped\",\n        icon: this.loopIcon\n      });\n    },\n    ctime() {\n      this.$root.$emit('ctime-update', this.ctime)\n    }\n  },\n  computed: {\n    ...mapState(\"watch\", {\n      start: state => state.playerSettings.loop_start,\n      stop: state => state.playerSettings.loop_stop,\n      isPlaying: state => state.playerSettings.playing,\n      looping: state => state.playerSettings.looping,\n      duration: state => state.playerSettings.duration,\n      seekToTime: state => state.seekToTime\n    }),\n    divPlayer() {\n      return [\"youtube\", \"vimeo\"].includes(this.type);\n    },\n    player() {\n      return this.$refs.mediaPlayer.player;\n    },\n    vimeoPlayer() {\n      // return `https://player.vimeo.com/video/${this.sources[0].src}?loop=false&amp;byline=false&amp;portrait=false&amp;title=false&amp;speed=true&amp;transparent=0&amp;gesture=media`;\n      return `${this.sources[0].src}`;\n    },\n    youtubePlayer() {\n      // return `http://www.youtube.com/embed/${this.sources[0].src}?rel=0&hd=1 `;\n      return `https://www.youtube.com/embed/${this.sources[0].src}?origin=https://plyr.io&amp;iv_load_policy=3&amp;modestbranding=1&controls=0&amp;playsinline=1&amp;showinfo=0&amp;rel=0&amp;enablejsapi=1`;\n    }\n  },\n  methods: {\n    ...mapActions(\"watch\", [\"flipPlayer\", \"loadPlayerSettings\"]),\n    setCurrentTime(val) {\n      this.player.currentTime = val;\n    },\n    clearLoop() {\n      // this.loopObjx = null;\n      this.$root.$emit(\"loop-cleared\");\n      console.log(\"loop cleared\");\n    },\n    pzInit(pz_instance) {\n      console.log(\"pz\", pz_instance);\n      this.pz = pz_instance;\n      this.pz.originalScale = this.pz.getTransform();\n      this.pz.pause();\n      this.pz.on(\"panstart\", e => {\n        console.log(e);\n      });\n    },\n    toggleZoom(e) {\n      if (this.pz.isPaused()) {\n        this.pz.resume();\n      } else {\n        this.pz.pause();\n      }\n      console.log(`pz is: ${this.pz.isPaused() ? \"paused\" : \"unpaused\"}`);\n    },\n    resetZoom(e) {\n      this.pz.smoothMoveTo(0, 0, 1);\n      this.pz.smoothZoomAbs(0, 0, 1);\n    },\n    loadDefaultSettings() {\n      const settings = {\n        speed: this.player.speed * 100,\n        volume: this.player.volume * 100\n      };\n      this.loadPlayerSettings(settings);\n    },\n    volumeChange(val) {\n      this.player.volume = val / 100;\n    },\n    speedChange(val) {\n      this.player.speed = val / 100;\n    },\n    timeUpdated: function(e) {\n      this.$store.commit('watch/SET_SEGMENT_DURATION',  this.player.duration);\n      this.ctime = this.player.currentTime;\n      if (this.looping) {\n        if (this.ctime >= this.stop && this.stop > 0) {\n          this.seekTo(this.start);\n          this.showMessage({\n            message: \"Loop Rewound\",\n            caption:\n              this.secondsToMinutes(this.ctime) +\n              \" >> \" +\n              this.secondsToMinutes(this.stop)\n          });\n        }\n      }\n    },\n    seekTo(time) {\n      if (!this.player || typeof time == NaN) return;\n      let val = time >= 0 ? time : 0;\n      console.log(\"Seek to time \", time);\n      this.ctime = this.setCurrentTime(val);\n    },\n    restart() {\n      this.seekTo(0);\n    },\n    togglePlay() {\n      // if (!this.player) return;\n      if (this.player?.playing) {\n        this.player?.pause();\n      } else {\n        this.player?.play();\n      }\n      this.$root.$emit('toggle_header');\n      this.$store.commit('watch/TOGGLE_PLAYING', this.player?.playing)\n      console.log(\"isisPlaying?: \", this.isPlaying);\n    },\n    setloopStart(time) {\n      this.$store.dispatch(\"watch/setLoopStart\", time).then(() => {\n        this.showMessage(\n          Object.assign({}, this.cfgLoopIcon, {\n            type: \"positive\",\n            message: \"Loop Start Set\",\n            caption: this.secondsToMinutes(this.start)\n          })\n        );\n      });\n    },\n    setloopStop(time) {\n      this.$store.dispatch(\"watch/setLoopStop\", time).then(info => {\n        var caption = {};\n        if (this.stop > 0) caption = { caption: this.secondsToMinutes(this.stop) };\n        this.showMessage(Object.assign({}, this.cfgLoopIcon, info, caption));\n      });\n    },\n    // resizeIFrameToFitContent( iFrame ) {\n    //   console.log('b-iframe', iFrame)\n    //   iFrame.width  = iFrame.contentWindow.parent.document.body.scrollWidth + 'px';\n    // iFrame.height = iFrame.contentWindow.parent.document.body.scrollHeight  * .9 + 'px';\n    //   console.log('a-iframe', iFrame)\n    // }\n  }\n};\n</script>\n<style>\n@import \"https://cdn.plyr.io/3.6.2/plyr.css\";\n\n/* .media-container { \n padding-bottom: 39% !important; \n } */\n\n.videoWrapper {\n  position: relative;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: calc(var(--aspect-ratio, 0.35) * 100%);\n}\n\n.videoWrapper iframe {\n  position: relative;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  padding-bottom: calc(var(--aspect-ratio, 0.35) * 100%);\n}\n.flipped {\n  -webkit-transform: rotateY(180deg);\n  transform: rotateY(180deg);\n}\n.plyr__controls {\n  opacity: 0;\n  pointer-events: none;\n  display: none;\n}\n</style>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.transport-button {\n  width: 100%;\n  // line-height: 2.5em;\n  background: none;\n  border: none;\n  // font-size: 1rem;\n  -webkit-font-smoothing: antialiased;\n  color: white;\n  text-align: center;\n  // font-weight: 600;\n  background: rgb(86, 86, 86);\n  background: -moz-linear-gradient(\n    top,\n    rgba(86, 86, 86, 1) 0%,\n    rgba(51, 51, 51, 1) 100%\n  );\n  background: -webkit-gradient(\n    linear,\n    left top,\n    left bottom,\n    color-stop(0%, rgba(86, 86, 86, 1)),\n    color-stop(100%, rgba(51, 51, 51, 1))\n  );\n  background: -webkit-linear-gradient(\n    top,\n    rgba(86, 86, 86, 1) 0%,\n    rgba(51, 51, 51, 1) 100%\n  );\n  background: linear-gradient(\n    to bottom,\n    rgba(86, 86, 86, 1) 0%,\n    rgba(51, 51, 51, 1) 100%\n  );\n  white-space: nowrap;\n  border-radius: 3px;\n  box-shadow: 0px 0px 3px #111;\n}\n"],"sourceRoot":""}