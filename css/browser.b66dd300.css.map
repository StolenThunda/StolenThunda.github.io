{"version":3,"sources":["webpack:///./src/components/browse/src/components/browse/CurrentSearch.vue"],"names":[],"mappings":";AAwGA;EACA;AACA","file":"css/browser.b66dd300.css","sourcesContent":["<template>\n  <q-toolbar v-if=\"searching\" class=\"flex flex-center text-white\">\n    Filters:\n    <span v-for=\"(val, key) in activeFilters\" :key=\"key + componentKey\">\n      <span v-if=\"val.length > 1\">\n        <q-btn rounded color=\"secondary\" :label=\"entitle(key)\">\n          <q-badge floating transparent color=\"accent\" class=\"shadow-5\">\n            {{ val.length }}\n          </q-badge>\n          <q-menu\n            transition-show=\"rotate\"\n            transition-hide=\"rotate\"\n            anchor=\"bottom middle\"\n            self=\"top middle\"\n            fit\n          >\n            <q-list style=\"min-width: 100px\">\n              <q-item v-for=\"chip in val\" :key=\"chip.sync + componentKey\">\n                <q-chip @remove=\"deleteFilter(chip)\" removable outline>\n                  {{ chip.text }}\n                </q-chip>\n              </q-item>\n            </q-list>\n          </q-menu>\n        </q-btn>\n      </span>\n      <span v-else class=\"text-capitalize\" :set=\"(chip = val[0])\">\n        <q-chip color=\"secondary\" removable @remove=\"deleteFilter(chip)\">\n          {{ chip.text }}\n          <q-badge\n            align=\"top\"\n            color=\"accent\"\n            transparent\n            class=\"shadow-5\"\n            floating\n            >{{ entitle(key) }}</q-badge\n          >\n        </q-chip>\n      </span>\n    </span>\n  </q-toolbar>\n</template>\n\n<script>\nimport { morph, format } from \"quasar\";\nimport { createNamespacedHelpers } from \"vuex\";\nimport { BrowserFilterSectionList } from \"src/middleware/ProPlayerBrowser\";\nconst { mapActions, mapGetters, mapState } = createNamespacedHelpers(\"browser\");\nexport default {\n  name: \"CurrentSearchBanner\",\n  data: () => ({ filters: null, componentKey: 0, toggle1: false }),\n  computed: {\n    props1() {\n      return this.toggle1 === true\n        ? {\n            class: \"q-ml-sm q-pa-md bg-accent text-white rounded-borders\",\n            style: \"font-size: 24px\"\n          }\n        : {\n            class: \"q-ml-xl q-px-xl q-py-lg bg-blue text-white\",\n            style:\n              \"border-radius:  25px; background-color: rgba(0, 153, 255, 0.85) !important;\"\n          };\n    },\n    ...mapState([\"searching\", \"activeFilters\"])\n  },\n  watch: {\n    activeFilters() {\n      this.forceUpdate();\n    }\n  },\n  methods: {\n    entitle(str) {\n      return format.capitalize(str.replace(\"-\", \" \"));\n    },\n    morphContent1() {\n      const onToggle = () => {\n        this.toggle1 = this.toggle1 !== true;\n      };\n\n      if (this.cancel1 === void 0 || this.cancel1() === false) {\n        this.cancel1 = morph({\n          from: this.$refs.morphedElement1,\n          onToggle,\n          duration: 500,\n          tween: true,\n          onEnd: end => {\n            end === \"from\" && onToggle();\n          }\n        });\n      }\n    },\n    forceUpdate() {\n      this.componentKey += 1;\n    },\n    deleteFilter(data) {\n      return this.removeFilter(data);\n    },\n    ...mapActions([\"removeFilter\"])\n  }\n};\n</script>\n\n<style scoped>\n.q-fab__actions > div {\n  z-index: 1000 !important;\n}\n</style>\n"],"sourceRoot":""}